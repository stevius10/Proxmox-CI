on:
  push:
    branches: [ release, main, develop ]

jobs:

  container-init:
    runs-on: [ "shell" ]
    outputs:
      ip: ${{ steps.config.outputs.ip }}
      id: ${{ steps.config.outputs.id }}
      hostname: ${{ steps.config.outputs.hostname }}
      cores: ${{ steps.config.outputs.cores }}
      memory: ${{ steps.config.outputs.memory }}
      swap: ${{ steps.config.outputs.swap }}
      rootfs: ${{ steps.config.outputs.rootfs }}
      boot: ${{ steps.config.outputs.boot }}
      shared: ${{ steps.config.outputs.shared }}
      terminate: ${{ steps.config.outputs.terminate }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: config
        name: Set configuration
        run: |
          source config.env
          echo "ip=192.168.178.$ID" >> $GITEA_OUTPUT
          echo "id=$ID" >> $GITEA_OUTPUT
          echo "hostname=$HOSTNAME" >> $GITEA_OUTPUT
          echo "cores=$CORES" >> $GITEA_OUTPUT
          echo "memory=$MEMORY" >> $GITEA_OUTPUT
          echo "swap=$SWAP" >> $GITEA_OUTPUT
          echo "rootfs=$ROOTFS" >> $GITEA_OUTPUT
          echo "boot=$BOOT" >> $GITEA_OUTPUT
          echo "shared=$SHARED" >> $GITEA_OUTPUT
          echo "terminate=$TERMINATE" >> $GITEA_OUTPUT

  container-base:
    runs-on: [ "shell" ]
    needs: container-init
    steps:
      - id: init
        uses: srv/base/.gitea/workflows@main
        with:
          ip: ${{ needs.container-init.outputs.ip }}
          id: ${{ needs.container-init.outputs.id }}
          hostname: ${{ needs.container-init.outputs.hostname }}
          cores: ${{ needs.container-init.outputs.cores }}
          memory: ${{ needs.container-init.outputs.memory }}
          swap: ${{ needs.container-init.outputs.swap }}
          rootfs: ${{ needs.container-init.outputs.rootfs }}
          boot: ${{ needs.container-init.outputs.boot }}
          shared: ${{ needs.container-init.outputs.shared }}
          terminate: ${{ needs.container-init.outputs.terminate }}
    if: ${{ github.ref == 'refs/heads/release' }}

  container-configuration:
    runs-on: [ "shell" ]
    needs: [container-init]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure container
        run: tar cz . | ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa config@${{ needs.container-init.outputs.ip }} 'tar xz -C ~ && sudo env IP=${{ needs.container-init.outputs.ip }} PWD=$(pwd) cinc-client -l info --local-mode --chef-license accept --config-option cookbook_path=. -o config'

#        run: |
#          ansible-playbook -i "${{ needs.container-init.outputs.ip }},"  -e "target=${{ needs.container-init.outputs.ip }}" /dev/stdin <<END
#          ---
#          - hosts: "{{ target | default('undef_host') }}"
#            become: yes
#            gather_facts: no
#            roles:
#              - setup
#            vars:
#              ansible_user: "config"
#              ansible_ssh_private_key_file: /root/.ssh/id_rsa
#            vars_files:
#              - "$(pwd)/setup/group_vars/all.yml"
#          END
